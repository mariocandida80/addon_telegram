homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        Package: 'Addon telegram per cronotermostato'
        Versione: '1.2'
        Autore: 'MARIO @tlod80'
   


automation:        
- alias: telegram term
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /termostato
  action: 
  - service: telegram_bot.send_message
    data_template:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*PANNELLO DI CONTROLLO*'
      inline_keyboard:
        - '{{ "\U0001F3E0" }} Stato:/stato,{{ "\U0001F525" }} Manuale:/manuale' 
        - '{{ "\U0001F916" }} Auto:/auto,{{ "\U0001F7E0" }} Preriscaldamento:/preriscaldamento'
        - '{{ "\U0001F4F4" }} Spento:/spento,{{ "\U00002618" }} Eco:/eco'
        - '{{ "\U00002744" }} Imposta temperatura:/temperatura,{{ "\U0001F550" }} Imposta orari:/orari'
        - '{{ "\U0001F51A" }} Uscita:/term_stop'
        
- alias: telegram off term
  trigger: 
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /term_stop
  action:
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: term_stop
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: 'Ciao, alla prossima. Il termostato é in modalità {{ states.input_select.modalita_termostato.state }} . Ti ricordo che per gestire il termostato basta inviare /termostato'
 
- alias: telegram start callback term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /term_back
  action:
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: term_back
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*PANNELLO DI CONTROLLO*'
      inline_keyboard:
        - '{{ "\U0001F3E0" }} Stato:/stato,{{ "\U0001F525" }} Manuale:/manuale' 
        - '{{ "\U0001F916" }} Auto:/auto,{{ "\U0001F7E0" }} Preriscaldamento:/preriscaldamento'
        - '{{ "\U0001F4F4" }} Spento:/spento,{{ "\U00002618" }} Eco:/eco'
        - '{{ "\U00002744" }} Imposta temperatura:/temperatura,{{ "\U0001F550" }} Imposta orari:/orari'
        - '{{ "\U0001F51A" }} Uscita:/term_stop'
     
      
################ STATO

- alias: stato term telegram
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /stato
  action:
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: stato
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      inline_keyboard:
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop'      
      message: >-
     
        *-----------STATO TERMOSTATO-----------*
   
        Modalità termostato {{ states.input_select.modalita_termostato.state }}

        Temperatura casa {{ states.sensor.temperatura_attuale.state }} °C

        Temperatura impostata {{ state_attr('climate.riscaldamento', 'temperature') }} °C

        Orario accensione impostato: {{ states.input_datetime.orario_accensione_term.state }}

        Orario spegnimento impostato: {{ states.input_datetime.orario_spegnimento_term.state }}
        
      
      

################ MANUALE

- alias: manuale term telegram
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /manuale
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato
      option: MANUALE
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato_old
      option: MANUALE
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: manuale
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      inline_keyboard:
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop'
      message: >-
     
        *-----------STATO TERMOSTATO-----------*
     
        Modalità termostato {{ states.input_select.modalita_termostato.state }}

        Temperatura casa {{ states.sensor.temperatura_attuale.state }} °C

        Temperatura impostata {{ state_attr('climate.riscaldamento', 'temperature') }} °C
        

        

################ OFF

- alias: spegnimento term telegram
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /spento
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato
      option: 'OFF'
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato_old
      option: 'OFF'
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: spento
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      inline_keyboard:
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop'
      message: >-
     
        *-----------STATO TERMOSTATO-----------*
     
        Modalità termostato {{ states.input_select.modalita_termostato.state }}

        Temperatura casa {{ states.sensor.temperatura_attuale.state }} °C

        Temperatura impostata {{ state_attr('climate.riscaldamento', 'temperature') }} °C
        
      
        
        
################ AUTO

- alias: auto term telegram
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /auto
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato
      option: AUTO
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato_old
      option: AUTO
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: auto
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      inline_keyboard:
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop'
      message: >-
     
        *-----------STATO TERMOSTATO-----------*
     
        Modalità termostato {{ states.input_select.modalita_termostato.state }}

        Temperatura casa {{ states.sensor.temperatura_attuale.state }} °C

        Temperatura impostata {{ state_attr('climate.riscaldamento', 'temperature') }} °C

        Orario accensione impostato: {{ states.input_datetime.orario_accensione_term.state }}

        Orario spegnimento impostato: {{ states.input_datetime.orario_spegnimento_term.state }}
        
     
       
        
################ PRERISCALDAMENTO

- alias: preriscaldamento term telegram
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /preriscaldamento
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato
      option: PRERISCALDAMENTO
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato_old
      option: PRERISCALDAMENTO  
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: preriscaldamento
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      inline_keyboard:
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop'
      message: >-
     
        *-----------STATO TERMOSTATO-----------*
     
        Modalità termostato {{ states.input_select.modalita_termostato.state }}

        Temperatura casa {{ states.sensor.temperatura_attuale.state }} °C

        Temperatura impostata {{ state_attr('climate.riscaldamento', 'temperature') }} °C

        Orario accensione impostato: {{ states.input_datetime.orario_accensione_term.state }}

        Orario spegnimento impostato: {{ states.input_datetime.orario_spegnimento_term.state }}
        

        
        
################ ECO

- alias: eco term telegram
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /eco
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato
      option: ECO
  - service: input_select.select_option
    data:
      entity_id: input_select.modalita_termostato_old
      option: ECO
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: eco
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      inline_keyboard:
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop'
      message: >-
     
        *-----------STATO TERMOSTATO-----------*
     
        Modalità termostato {{ states.input_select.modalita_termostato.state }}

        Temperatura casa {{ states.sensor.temperatura_attuale.state }} °C

        Temperatura impostata {{ state_attr('climate.riscaldamento', 'temperature') }} °C
        
 
        

####menu temperatura       
- alias: telegram menu temp term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /temperatura
  action:
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: temperatura
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      inline_keyboard:
        - ' +:/+temp' 
        - "{{ state_attr('climate.riscaldamento', 'temperature') }}:/null"
        - ' -:/-temp'
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop'
      title: '*CRONOTERMOSTATO*'
      message: Seleziona la temperatura da impostare. Attualmente è impostata a {{ state_attr('climate.riscaldamento', 'temperature') }} °C
      
        

####menu orari       
- alias: telegram menu orari term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /orari
  action:
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: orari
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      inline_keyboard:
        - '{{ "\U0001F550" }} Orario accensione:/accensione,{{ "\U0001F550" }} Orario spegnimento:/spegnimento' 
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop'    
      title: '*CRONOTERMOSTATO*'
      message: >-
        *MENU IMPOSTAZIONE ORARI*
        
        Orario accensione impostato: {{ states.input_datetime.orario_accensione_term.state }}
        
        Orario spegnimento impostato: {{ states.input_datetime.orario_spegnimento_term.state }}

        
        
####menu accensione       
- alias: telegram menu accensione term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /accensione
  action:
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: accensione
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      message: '*Orario accensione*'
      inline_keyboard:
        - ' +H:/+ora_a,+M:/+min_a' 
        - "{{ states.input_datetime.orario_accensione_term.state }}:/null"
        - ' -H:/-ora_a,-M:/-min_a'          
        - '{{ "\U0001F51B" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop' 



####menu spegnimento       
- alias: telegram menu spegnimento term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /spegnimento
  action:
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: spegnimento
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      message: '*Orario spegnimento*'
      inline_keyboard:
        - ' +H:/+ora_s,+M:/+min_s' 
        - "{{ states.input_datetime.orario_spegnimento_term.state }}:/null"
        - ' -H:/-ora_s,-M:/-min_s'
        - '{{ "\U0001F51B" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop'     

####temperatura   
- alias: telegram temperatura + term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /+temp
  action:
  - service: input_number.increment
    entity_id: input_number.temperatura_termostato
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: +temp
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: Temperatura impostata {{ state_attr('climate.riscaldamento', 'temperature') }} °C
      inline_keyboard:
        - ' +:/+temp' 
        - "{{ state_attr('climate.riscaldamento', 'temperature') }}:/null"
        - ' -:/-temp'
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop' 
        
 
- alias: telegram prova - term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /-temp
  action:
  - service: input_number.decrement
    entity_id: input_number.temperatura_termostato
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: -temp
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: Temperatura impostata {{ state_attr('climate.riscaldamento', 'temperature') }} °C
      inline_keyboard:
        - ' +:/+temp' 
        - "{{ state_attr('climate.riscaldamento', 'temperature') }}:/null"
        - ' -:/-temp'
        - '{{ "\U0001F519" }} Indietro:/term_back,{{ "\U0001F51A" }} Uscita:/term_stop' 

        
####accensione    

- alias: telegram + ora acc term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /+ora_a
  action:
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.orario_accensione_term
      time: "{{ (((state_attr('input_datetime.orario_accensione_term', 'timestamp') | int ) +3600) | timestamp_custom('%H:%M', false)) }}"
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: +ora_a
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*Orario accensione*'
      inline_keyboard:
        - ' +H:/+ora_a,+M:/+min_a' 
        - "{{ states.input_datetime.orario_accensione_term.state }}:/null"
        - ' -H:/-ora_a,-M:/-min_a'
        - '{{ "\U0001F519" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop'   

        
        
- alias: telegram - ora acc term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /-ora_a
  action:
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.orario_accensione_term
      time: "{{ (((state_attr('input_datetime.orario_accensione_term', 'timestamp') | int ) -3600) | timestamp_custom('%H:%M', false)) }}"
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: -ora_a
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*Orario accensione*'
      inline_keyboard:
        - ' +H:/+ora_a,+M:/+min_a' 
        - "{{ states.input_datetime.orario_accensione_term.state }}:/null"
        - ' -H:/-ora_a,-M:/-min_a'
        - '{{ "\U0001F519" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop' 
        

- alias: telegram + min acc term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /+min_a
  action:
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.orario_accensione_term
      time: "{{ (((state_attr('input_datetime.orario_accensione_term', 'timestamp') | int ) +900) | timestamp_custom('%H:%M', false)) }}"
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: +min_a
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*Orario accensione*'
      inline_keyboard:
        - ' +H:/+ora_a,+M:/+min_a' 
        - "{{ states.input_datetime.orario_accensione_term.state }}:/null"
        - ' -H:/-ora_a,-M:/-min_a'
        - '{{ "\U0001F519" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop' 

        

- alias: telegram - min acc term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /-min_a
  action:
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.orario_accensione_term
      time: "{{ (((state_attr('input_datetime.orario_accensione_term', 'timestamp') | int ) -900) | timestamp_custom('%H:%M', false)) }}"
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: +min_a
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*Orario accensione*'
      inline_keyboard:
        - ' +H:/+ora_a,+M:/+min_a' 
        - "{{ states.input_datetime.orario_accensione_term.state }}:/null"
        - ' -H:/-ora_a,-M:/-min_a'
        - '{{ "\U0001F519" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop' 
        

- alias: telegram + ora spegn term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /+ora_s
  action:
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.orario_spegnimento_term
      time: "{{ (((state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int ) +3600) | timestamp_custom('%H:%M', false)) }}"
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: +ora_s
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*Orario spegnimento*'
      inline_keyboard:
        - ' +H:/+ora_s,+M:/+min_s' 
        - "{{ states.input_datetime.orario_spegnimento_term.state }}:/null"
        - ' -H:/-ora_s,-M:/-min_s'
        - '{{ "\U0001F519" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop'   
        
        
- alias: telegram - ora spegn term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /-ora_s
  action:
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.orario_spegnimento_term
      time: "{{ (((state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int ) -3600) | timestamp_custom('%H:%M', false)) }}"
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: -ora_s
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*Orario spegnimento*'
      inline_keyboard:
        - ' +H:/+ora_s,+M:/+min_s' 
        - "{{ states.input_datetime.orario_spegnimento_term.state }}:/null"
        - ' -H:/-ora_s,-M:/-min_s'
        - '{{ "\U0001F519" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop' 
        

- alias: telegram + min spegn term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /+min_s
  action:
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.orario_spegnimento_term
      time: "{{ (((state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int ) +900) | timestamp_custom('%H:%M', false)) }}"
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: +min_s
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*Orario spegnimento*'
      inline_keyboard:
        - ' +H:/+ora_s,+M:/+min_s' 
        - "{{ states.input_datetime.orario_spegnimento_term.state }}:/null"
        - ' -H:/-ora_s,-M:/-min_s'
        - '{{ "\U0001F519" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop' 
        

- alias: telegram - min spegn term
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /-min_s
  action:
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.orario_spegnimento_term
      time: "{{ (((state_attr('input_datetime.orario_spegnimento_term', 'timestamp') | int ) -900) | timestamp_custom('%H:%M', false)) }}"
  - service: telegram_bot.answer_callback_query
    data:
      callback_query_id: '{{ trigger.event.data.id }}'
      message: +min_s
  - service: telegram_bot.send_message
    data:
      target: '{{ trigger.event.data.user_id }}'
      title: '*CRONOTERMOSTATO*'
      message: '*Orario spegnimento*'
      inline_keyboard:
        - ' +H:/+ora_s,+M:/+min_s' 
        - "{{ states.input_datetime.orario_spegnimento_term.state }}:/null"
        - ' -H:/-ora_s,-M:/-min_s'
        - '{{ "\U0001F519" }} Indietro:/orari,{{ "\U0001F51A" }} Uscita:/term_stop' 
        
